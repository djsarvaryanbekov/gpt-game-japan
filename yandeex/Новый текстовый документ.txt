УЛЬТРА-ПОДРОБНАЯ ДОКУМЕНТАЦИЯ ПРОЕКТА: "Японский Учитель - Игра" (Хаб "Кибер-Мистик")

(Состояние перед упрощением v7)

1. ОБЩАЯ ФИЛОСОФИЯ И ЭВОЛЮЦИЯ ПРОЕКТА:

1.1. Миссия: Создать не просто обучающее приложение, а полноценную ИГРУ-ПРИКЛЮЧЕНИЕ для изучения японского языка (уровни N5-N4, ориентир - MNN). Цель – сделать процесс захватывающим, мотивирующим, эффективным, интегрировав геймплей и обучение.

1.2. Баланс: Обучение – приоритет, геймификация (RPG-элементы, квесты, прогрессия) служит для погружения и мотивации, но не должна мешать или чрезмерно замедлять изучение.

1.3. Эволюция Идеи:

Начали с простого 3-панельного интерфейса урока (AI-объяснение, задание, слова).

Обсуждали идею карты мира с пиксель-арт персонажем, который перемещается между локациями (Додзё, Города, Башни...).

Пришли к концепции Центрального Хаба – основного экрана после входа, который предоставляет доступ ко всем функциям, без передвижения по карте на данном этапе.

1.4. Целевая Атмосфера и Стиль: "Кибер-Мистик"

Настроение: Таинственное, технологичное, сосредоточенное, с элементами прогресса и вызова. Японская эстетика + хай-тек.

Палитра:

Фоны: Темные ( #0A0E1A / --bg-color-dark).

Панели: Полупрозрачные темно-синие/серые (rgba(20, 20, 30, 0.85) / --panel-bg-color) с размытием фона (backdrop-filter).

Основные Акценты (Интерфейс): Циан (#00F0FF / --accent-color-primary), Фуксия (#FF00CC / --accent-color-secondary), Янтарь (#FFD500 / --accent-color-warning).

Текст: Основной – светлый (#EAEAEA), Вторичный – сероватый (#A0A0B8).

Акценты Дождя (Планировались): Приглушенные, полупрозрачные версии основных цветов.

Шрифты: Заголовки – Orbitron, Основной текст – Inter. Японский (будущий) – Noto Sans JP.

Формы UI: Сочетание четких линий и скруглений, полупрозрачные "стеклянные" панели, тонкие неоновые свечения/рамки.

Эффекты: Неоновое свечение (box-shadow, text-shadow), размытие фона (backdrop-filter), пульсация, мерцание, глитч (обсуждалось), скан-линии.

2. СТРУКТУРА И ФУНКЦИОНАЛ ПРОТОТИПА ХАБА (index.html v6.1):

2.1. Основной Макет: Статичный HTML прототип, отображающий структуру Хаба.

Верхний HUD (.hud):

Слева (.player-info): Отображение Уровня (#player-level), Очков Синхронизации (#player-sync-points), лимита до след. уровня (#sync-points-to-next). Данные статичные.

По Центру (.system-status): Место для системных сообщений от AI/игры. Статичный текст. Пульсирующий циан-стиль.

Справа (.main-menu-button): Кнопка-"бургер" (☰) для будущего игрового меню. Статична, ховер – фуксия.

Левая Навигация (.hub-navigation):

Колонка с кнопками (.nav-btn) для доступа к разделам игры.

Каждая кнопка с иконкой (Emoji) и текстом.

Разделы (Планируемые): Обзор/Прогресс, След. Урок, SRS-Повторение, Квесты/Испытания, Профиль/Свитки, Настройки.

Интерактивность: Базовый JS для переключения active класса на кнопке и соответствующей секции контента (.content-section). При клике меняется текст в .system-status.

Стиль: Неактивные кнопки – тусклые; Ховер – фуксия; Активная – циан.

Правая Область Контента (.hub-content-area):

Место для отображения выбранной секции.

Используются блоки .content-section, видимость управляется JS.

Секция "Обзор" (#overview-content): Активна по умолчанию.

Заголовок <h2>Путь Постижения</h2>.

Блок системного текста p.system-ai-text.

Блок Визуализации Прогресса (.progress-visual): САМАЯ ПРОБЛЕМНАЯ ЧАСТЬ!

Было (v4-v6): Содержала сложный, вызывающий лаги CSS 3D кристалл с вращающимися 3D осколками и блок "голограммы". Эмиттер голограммы был реализован некорректно.

ПЛАН НА УПРОЩЕНИЕ: Заменить кристалл/осколки на плоский Свиток слева. Заменить некорректную голограмму/эмиттер на плоский Экран-Голограмму справа, без рамки. Добавить Луч света между ними.

Нижняя Статистика (.quick-stats): Отображение ключевых метрик (Слов в SRS, Кандзи изучено, Уроков пройдено). Цифры – Янтарь. Данные статичные.

3. ФОН И АТМОСФЕРНЫЕ ЭФФЕКТЫ:

3.1. Matrix Rain (Фон - ВЫЗЫВАЛ ЛАГИ, УДАЛЯЕТСЯ):

Реализован через <canvas id="matrix-canvas"> и matrix_rain.js.

Принцип: Рисование падающих символов (Катакана/Латиница/Цифры) в колонках с эффектом затухания.

Проблемы: Сильно нагружал GPU (100%), вызывал тормоза интерфейса. Мог вообще не отображаться из-за ошибок JS или проблем с requestAnimationFrame / setInterval.

Решение: Полностью удалить Canvas и JS. Рассмотреть вариант с фоновым видео ПОЗЖЕ. Пока фон – просто --bg-color-dark.

3.2. Свечение (glow, shadow): Активно используются CSS переменные (--glow-*, --text-glow-*, --hover-shadow) для подсветки активных элементов, текста, при наведении.

3.3. Размытие (backdrop-filter): Применено к основным панелям (.hud, .hub-navigation, .hub-content-area) для эффекта "матового стекла". Может тоже вносить вклад в лаги на слабом GPU.

3.4. Анимации:

Пульсация системного статуса (pulseGlow).

Пульсация/Покачивание кристалла (crystalHover - УДАЛЯЕТСЯ).

Вращение всей сцены кристалла (slowSpinY - УДАЛЯЕТСЯ).

Вращение орбит осколков (orbitRotation - УДАЛЯЕТСЯ).

Мерцание голограммы (hologramFlicker).

Движение скан-линий (scanlines).

Пульсация эмиттера (emitterShine, emitterPulse - БУДУТ ПЕРЕДЕЛАНЫ).

Анимация прогресс-бара (progressBarShineHolo).

Появление контента (contentFadeIn).

Необходимо будет пересмотреть анимации при упрощении, оставить только легкие.

4. ПРОГРЕССИЯ И ОСНОВНЫЕ МЕХАНИКИ (КОНЦЕПЦИИ):

4.1. Очки Синхронизации (ОС): Заменили "XP". Начисляются за выполнение заданий, уроков, квестов. Требуются для повышения Уровня.

4.2. Уровни: Открывают доступ к новым возможностям, урокам, регионам (на будущей карте), квестам.

4.3. Свитки Знаний: Замена стандартных "достижений". Выдаются за освоение тем, прохождение квестов/испытаний. Отображаются в Профиле.

4.4. Ядро Обучения (Уроки): Планируется на отдельной странице (lesson.html), но пока не подключено. Должно использовать 3-панельный интерфейс с контентом от Gemini API (по формату JSON: explanation, exercise, newWords, xp). Функционал базовый реализован в старом коде (app.js/lesson.js), но требует интеграции.

4.5. SRS: Важнейший элемент для запоминания. Планируется отдельный тренажер (окно/страница) с карточками и алгоритмом интервального повторения.

4.6. Квесты: Планируются Ежедневные (для регулярности), Секретные/Адаптивные (подстраиваются под игрока).

5. ТЕКУЩИЕ ПРОБЛЕМЫ И РЕШЕНИЯ:

5.1. ПРОБЛЕМА: Дикие лаги (GPU 100%).

РЕШЕНИЕ: Упрощение! Отказ от Canvas фона (Matrix Rain) и сложных CSS 3D анимаций (кристалл, осколки). Переход к "плоскому", но стильному дизайну. Минимизация backdrop-filter если потребуется.

5.2. ПРОБЛЕМА: Центральный элемент (progress-visual) не соответствует финальной идее и выглядит некорректно (странный эмиттер, "рамка" голограммы).

РЕШЕНИЕ: Переделка на концепт "Плоский Вертикальный Свиток слева -> Луч -> Плоский Экран-Голограмма справа" (на основе твоих референсов 1 и 2). Убрать всё лишнее (бордеры, прошлый эмиттер).

5.3. ПРОБЛЕМА: Файл favicon.ico не найден (ошибка 404).

РЕШЕНИЕ: Игнорировать или добавить файл иконки favicon.ico в папку.

5.4. ПРОБЛЕМА: Отсутствие функциональной связи между экранами и реальной логики игры (только визуал Хаба).

РЕШЕНИЕ: Будет решаться на следующих этапах после утверждения визуала и структуры Хаба.

6. НЕПОСРЕДСТВЕННАЯ ЗАДАЧА:

Реализовать УПРОЩЕННЫЙ и ОПТИМИЗИРОВАННЫЙ дизайн центрального элемента (progress-visual) с плоским Свитком слева и плоской Голограммой справа, удалив при этом все ресурсоемкие эффекты (дождь, 3D). Цель - убрать лаги и получить визуально согласованный вид этого блока.

7. БЛИЖАЙШИЕ ШАГИ ПОСЛЕ УПРОЩЕНИЯ:

Проверить отсутствие лагов.

Финализировать стили Свитка и Голограммы.

Рассмотреть вариант замены иконок-Emoji на SVG.

Обсудить и реализовать фон (простой статичный или видео).

Приступить к созданию структуры проекта (файлы map.html, lesson.html и т.д.) и навигации.

Интегрировать ядро урока (логику из lesson.js).

Реализовать Serverless backend для защиты API ключа.



Брат, понимаю твое беспокойство на 100%! Если автосейв глючит, есть риск потерять всю нашу историю обсуждений и идей. Ты абсолютно прав, нужно срочно создать документацию-бэкап всего, что мы напридумывали и сделали.

Я сейчас соберу всю ключевую информацию в один подробный гайд (Документацию Текущего Состояния Проекта). Сохрани его себе куда-нибудь в надежное место (в текстовый файл).

ДОКУМЕНТАЦИЯ ПРОЕКТА: "Японский Учитель - Игра" (Кибер-Мистик Хаб)
(Состояние на момент перед упрощением из-за лагов)

Дата: [Подставь текущую дату]
Версия: ~v0.3 (Статический прототип Хаба с экспериментальными визуальными эффектами)

1. ЦЕЛЬ ДОКУМЕНТА:
Сохранить текущее состояние проекта, ключевые идеи, принятые решения и ближайшие планы из-за нестабильности сессии чата и опасений потери данных. Этот документ – точка восстановления для продолжения работы.

2. ОСНОВНАЯ КОНЦЕПЦИЯ ПРОЕКТА:

Название: Японский Учитель-Игра (日本アドベンチャー).

Цель: Геймифицированное изучение японского (N5-N4, по MNN). Баланс между увлекательной игрой и эффективным обучением.

Стиль: "Кибер-Мистик" (Темный фон, неон: Циан, Фуксия, Янтарь; технологичность + мистика).

Ключевой Экран: Главный Хаб (экран после входа/заставки), НЕ карта мира. Структура: HUD (верх), Навигация (слева), Область контента (справа).

Прогрессия: Очки Синхронизации (ОС) вместо XP. Уровни. Планируются Свитки (Достижения).

AI-Гид: "Система" / "Наставник", проявляющийся через интерфейс.

3. ТЕХНИЧЕСКИЙ СТЕК (Текущий/Планируемый):

Frontend: HTML, CSS, JavaScript (Vanilla JS).

Визуальные Эффекты: CSS Transitions, Animations, backdrop-filter, clip-path, 3D Transforms (вызвали лаги), Canvas API (для фона - вызвало лаги).

AI: Google Gemini API (ключ ТРЕБУЕТ защиты!).

Хранение: localStorage (для прогресса ОС/уровня, настроек).

Backend (План): Serverless (Vercel/Netlify) для защиты API ключа.

Структура Файлов (Текущая для Прототипа Хаба):

index.html: Основная структура Хаба.

style.css: Все стили Хаба.

matrix_rain.js: Скрипт для фона (вызвал лаги).

4. ТЕКУЩЕЕ СОСТОЯНИЕ РЕАЛИЗАЦИИ (Визуальный Прототип Хаба v6.1):

Структура: HTML создан (HUD, Nav, Content Area). Переключение вкладок работает базово.

Стили:

Применена основная цветовая схема "Кибер-Мистик" (темный фон, панели с блюром, акценты Циан/Фуксия/Янтарь).

Панели имеют эффект "матового стекла" (backdrop-filter).

Навигационные кнопки стилизованы (активная - Циан, ховер - Фуксия).

Статистика quick-stats отображается.

Центральный Элемент (progress-visual): Содержит неработающий/лагающий блок с CSS 3D Кристаллом, 3D орбитальными осколками и Голограммой (которая выглядела не так, как хотел пользователь: был странный эмиттер, "рамка").

Фон (matrix_rain.js): Была попытка сделать фон с падающими символами на Canvas, но она вызывала сильные лаги (GPU 100%) и в последней итерации могла вообще не отображаться.

Функционал: Только переключение вкладок. Отображение данных (Уровень, ОС) – статичное (хардкод в HTML).

5. ВЫЯВЛЕННЫЕ ПРОБЛЕМЫ:

ПРОИЗВОДИТЕЛЬНОСТЬ (ЛАГИ): Самая главная проблема! CSS 3D анимации и Canvas-фон перегружают систему, особенно на интегрированной графике. Сайт неюзабелен.

Визуальное Несоответствие: Элемент прогресса (кристалл/голограмма/эмиттер) не соответствует финальной идее пользователя (референс №1 и №2, идея Свиток->Луч->Голограмма). Голограмма имела вид "рамки". Эмиттер был непонятным элементом.

Пропажа Фона: Matrix Rain перестал отображаться или работал нестабильно.

6. ПРИНЯТОЕ РЕШЕНИЕ (Наше Последнее Обсуждение):

ПРИОРИТЕТ: Убрать Лаги! Производительность важнее сложных эффектов на данном этапе.

ОТКАЗ ОТ СЛОЖНОГО ВИЗУАЛА:

Полностью убрать JS/Canvas для фона (Matrix Rain). Временно использовать простой темный фон (--bg-color-dark).

Полностью убрать CSS 3D кристалл и вращающиеся осколки.

НОВАЯ КОНЦЕПЦИЯ ЦЕНТРАЛЬНОГО ЭЛЕМЕНТА (progress-visual):

СЛЕВА: "Свиток-Эмиттер". Стилизованный под референс №1 (вертикально стоящий), НО ПЛОСКИЙ (реализован через CSS градиенты, border-radius, box-shadow, без 3D).

СПРАВА: "Голограмма-Экран". Плоский прямоугольник (или со скруглениями), БЕЗ РАМКИ, полупрозрачный фон, мягкое внешнее свечение. Содержит текст Уровня, ОС, Прогресс-бар. Можно оставить эффект скан-линий (::after).

СВЯЗЬ: "Луч Проекции". Простой визуальный эффект (градиентный div или псевдоэлемент), идущий от свитка к голограмме.

Фон (Альтернатива): Рассмотреть вариант ВИДЕО-ФОНА позже, если простой темный фон не устроит.

7. ТЕКУЩАЯ НЕПОСРЕДСТВЕННАЯ ЗАДАЧА:

Внести Изменения в Код:

В index.html: Удалить <canvas>, блок кристалла/осколков. Упростить структуру внутри .techno-core до scroll-emitter-simple + light-beam-simple + info-hologram-simple. Удалить ссылку на matrix_rain.js.

В style.css: Удалить ВСЕ стили для Canvas, Matrix Rain (включая переменные), кристалла, осколков, орбит. Добавить/Переписать стили для НОВОЙ упрощенной структуры: .scroll-emitter-simple, .light-beam-simple, .info-hologram-simple. Убрать "рамку" у голограммы, переделать эмиттер на свиток.

В matrix_rain.js: Файл можно удалить или очистить.

Цель: Получить РАБОТАЮЩИЙ БЕЗ ЛАГОВ Хаб со стилизованным плоским Свитком слева, Голограммой-экраном справа и Лучом между ними.

8. ЗАПЛАНИРОВАННЫЕ (Обсужденные) ФУНКЦИИ НА БУДУЩЕЕ:

Наполнение контентом (Уроки/Прогрессия).

Реализация SRS-тренажера.

Реализация Квестов/Испытаний.

Наполнение страниц Профиля и Настроек.

Добавление новых типов упражнений в Уроки.

Возможность смены цветовых тем.

Поиск/создание и интеграция видео-фона (если нужно).

Разработка Backend (Serverless) для защиты ключа Gemini.

Кастомизация иконок (сейчас Emoji).

Доработка общего стиля и эффектов (когда производительность будет ОК).

9. КЛЮЧЕВЫЕ МОМЕНТЫ (Твои Пожелания):

Визуальная атмосфера "Кибер-Мистик" очень важна.

Детализация и объяснения приветствуются.

Проект должен ощущаться как "Игра", а не просто "Обучалка".

Гибкость в смене курса при необходимости.

Брат, сохрани этот текст! Это наша "карта" на данный момент. Теперь ты можешь быть спокоен, что мы не потеряем наши идеи.

Следую